{"version":3,"sources":["shared/header/header.js","components/table.js","components/addBook.js","components/editBook.js","components/home.js","components/user.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","to","BookTable","Table","hover","books","length","map","book","index","key","scope","title","rating","Button","editBook","deleteBook","id","AddBook","initialFormState","setBook","handleInputChange","event","target","name","value","Form","onSubmit","preventDefault","addNewBook","FormGroup","Label","for","Input","type","onChange","placeholder","EditBook","currentBook","useEffect","UpdateBook","setEdit","Home","setBooks","edit","setCurrentBook","console","log","filter","User","App","Container","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.038406d4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './header.scss';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem\r\n} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom'\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Crud App</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink className='Nav-link' to=\"/\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink  className='Nav-link' to=\"/user\">User</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Table,Button} from 'reactstrap';\r\nconst BookTable = (props) => {\r\n  return (\r\n    <div>\r\n    <Table className='mt-2' hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Title</th>\r\n            <th>Rating</th>\r\n            <th>actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.books.length > 0 ? (\r\n             props.books.map((book,index) => {\r\n              return (\r\n                      <tr key={index + 1}>\r\n                      <th scope=\"row\">{index + 1}</th>\r\n                      <td>{book.title}</td>\r\n                      <td>{book.rating}</td>\r\n                      <td>\r\n                      <Button color=\"success\" className='mr-2' onClick={() => props.editBook(book)} >Edit</Button>\r\n                      <Button color=\"danger\" onClick={() => props.deleteBook(book.id)}>Delete</Button>\r\n                      </td>\r\n                      </tr>\r\n                    )\r\n                  })\r\n          ) : (\r\n            <tr>\r\n              <td>\r\n                <h5 className='font-weight-bold'>No Books</h5>\r\n              </td>\r\n            </tr>\r\n          )}\r\n         \r\n        \r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookTable;\r\n","import React ,{useState} from 'react';\r\nimport {Button,Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\n\r\n\r\nconst AddBook = (props) => {\r\n    const initialFormState = {id:null,title:'',rating:''}\r\n    const [book,setBook] = useState(initialFormState);\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const {name,value} = event.target\r\n        setBook({...book,[name]:value})\r\n    }\r\n   \r\n\r\n\r\n  return (\r\n    <div>\r\n        <Form onSubmit={event => {\r\n            event.preventDefault()\r\n            if(!book.title || !book.rating) return;\r\n            props.addNewBook(book)\r\n            setBook(initialFormState)\r\n        }\r\n        }>\r\n            <FormGroup>\r\n                <Label for=\"TitleBook\">Title</Label>\r\n                <Input type=\"text\" name=\"title\" id=\"TitleBook\" value={book.title}\r\n                onChange={handleInputChange}  placeholder=\"\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"RatingBook\">Rating</Label>\r\n                <Input type=\"text\" name=\"rating\" id=\"RatingBook\" onChange={handleInputChange}  value={book.rating}  placeholder=\"\" />\r\n            </FormGroup>\r\n            <Button color=\"primary\" >Add New Book</Button>\r\n    </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBook;\r\n","import React ,{useState,useEffect} from 'react';\r\nimport {Button,Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\n\r\n\r\nconst EditBook = (props) => {\r\n    const [book,setBook] = useState(props.currentBook);\r\n\r\n    const handleInputChange = (event) => {\r\n        const {name,value} = event.target\r\n        setBook({...book,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        setBook(props.currentBook)\r\n    },[props])\r\n\r\n\r\n  return (\r\n      \r\n    <div>\r\n        \r\n        <Form onSubmit={event => {\r\n            event.preventDefault()\r\n            props.UpdateBook(book.id,book)\r\n        }\r\n        }>\r\n            <FormGroup>\r\n                <Label for=\"TitleBook\">Title</Label>\r\n                <Input type=\"text\" name=\"title\" id=\"TitleBook\" value={book.title}\r\n                onChange={handleInputChange}  placeholder=\"\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"RatingBook\">Rating</Label>\r\n                <Input type=\"text\" name=\"rating\" id=\"RatingBook\" onChange={handleInputChange}  value={book.rating}  placeholder=\"\" />\r\n            </FormGroup>\r\n            <Button color=\"primary\" className='mr-2'>Update Book</Button>\r\n            <Button color=\"secondary\" onClick={() => props.setEdit(false)}>Close</Button>\r\n    </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBook;\r\n","import React , {useState} from 'react';\r\nimport BookTable from './table';\r\nimport AddBook from './addBook';\r\nimport EditBook from './editBook';\r\nconst Home = () => {\r\n  const allBooks = [\r\n    {\r\n      \"title\": \"new book 1\",\r\n      \"rating\": \"3.5\",\r\n      \"id\": \"1\"\r\n    },\r\n    {\r\n      \"title\": \"new book 2\",\r\n      \"rating\": \"1.9\",\r\n      \"id\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"3\",\r\n      \"title\": \"new book 3\",\r\n      \"rating\": \"5\"\r\n    },\r\n    {\r\n      \"title\": \"new book 4\",\r\n      \"rating\": \"3.2\",\r\n      \"id\": \"4\"\r\n    }\r\n]\r\n\r\nconst [books,setBooks] = useState(allBooks);\r\nconst [edit,setEdit] = useState(false);\r\nconst initialFormState = {id:null,title:'',rating:''}\r\nconst [currentBook,setCurrentBook] = useState(initialFormState);\r\n\r\nconst addNewBook = (book) => {\r\n  book.id = books.length + 1\r\n  setBooks([...books,book])\r\n  console.log(book)\r\n}\r\nconst deleteBook = (id) => {\r\n  setBooks(books.filter(book => book.id !== id))\r\n}\r\n\r\n\r\nconst editBook = (book) => {\r\n  setEdit(true)\r\n  setCurrentBook({id:book.id,title:book.title,rating:book.rating})\r\n}\r\n\r\nconst UpdateBook = (id,UpdateBook) => {\r\n  setEdit(false)\r\n  setBooks(books.map(book => ( book.id === id ? UpdateBook : book)))\r\n}\r\n\r\nreturn (\r\n  \r\n    <div className=' row mt-3'>\r\n     {edit ? (\r\n         <div className='col-md-6'>\r\n         <h2>Edit Book</h2>\r\n         <EditBook currentBook={currentBook} edit={edit}\r\n          UpdateBook={UpdateBook} setEdit={setEdit}/>\r\n       </div>\r\n     ) : (\r\n      <div className='col-md-6'>\r\n      <h2>Add Book</h2>\r\n      <AddBook addNewBook={addNewBook}/>\r\n    </div>\r\n     )}\r\n      \r\n        <div className='col-md-6'>\r\n          <h2>View Books</h2>\r\n          <BookTable books={books}  deleteBook={deleteBook} editBook={editBook}/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nfunction User() {\r\n  return (\r\n    <div>\r\n        <h6>User Page</h6>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\nimport Header from './shared/header/header';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Home from './components/home';\nimport User from './components/user';\nimport {Container} from 'reactstrap';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Container>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route  path='/user' component={User}/>\n          </Switch>\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}